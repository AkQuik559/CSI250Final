// <auto-generated />
using System;
using ComputerStoreFinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerStoreFinalProject.Migrations
{
    [DbContext(typeof(ComputerStoreDbContext))]
    [Migration("20220618230504_initAddressTable")]
    partial class initAddressTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComputerStoreFinalProject.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Kent",
                            Country = "USA",
                            CustomerID = 1,
                            StreetName = "SE 209th St",
                            StreetNumber = "12025",
                            Unit = "",
                            Zip = "98031"
                        });
                });

            modelBuilder.Entity("ComputerStoreFinalProject.Models.Computer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Computers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyName = "Hp",
                            Model = "notebook 360",
                            Price = 899.99m,
                            Year = 2019
                        },
                        new
                        {
                            ID = 2,
                            CompanyName = "Dell",
                            Model = "Latitude 7420",
                            Price = 2029.00m,
                            Year = 2022
                        },
                        new
                        {
                            ID = 3,
                            CompanyName = "Apple",
                            Model = "MacBook Pro",
                            Price = 3499.00m,
                            Year = 2021
                        },
                        new
                        {
                            ID = 4,
                            CompanyName = "Asus",
                            Model = "Zenbook Duo",
                            Price = 2299.00m,
                            Year = 2022
                        },
                        new
                        {
                            ID = 5,
                            CompanyName = " Asus",
                            Model = "VivoBook Flip",
                            Price = 269.00m,
                            Year = 2022
                        },
                        new
                        {
                            ID = 6,
                            CompanyName = "Dell",
                            Model = "Vostro 3510",
                            Price = 629.00m,
                            Year = 2022
                        },
                        new
                        {
                            ID = 7,
                            CompanyName = "Hp",
                            Model = "Omen",
                            Price = 2349.99m,
                            Year = 2021
                        },
                        new
                        {
                            ID = 8,
                            CompanyName = "Apple",
                            Model = "MacBook Air",
                            Price = 1199.00m,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("ComputerStoreFinalProject.Models.ComputerOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComputerID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComputerID");

                    b.HasIndex("OrderID");

                    b.ToTable("ComputerOrders");
                });

            modelBuilder.Entity("ComputerStoreFinalProject.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "bmayhou0@imageshack.us",
                            FirstName = "Brynne",
                            LastName = "Mayhou",
                            Mobile = "758-562-6470",
                            Phone = "966-926-0620"
                        },
                        new
                        {
                            ID = 2,
                            Email = "mvela1@flickr.com",
                            FirstName = "Margaretha",
                            LastName = "Vela",
                            Mobile = "684-651-3264",
                            Phone = "217-861-7584"
                        },
                        new
                        {
                            ID = 3,
                            Email = "amapother2@is.gd",
                            FirstName = "Amalia",
                            LastName = "Mapother",
                            Mobile = "673-740-4441",
                            Phone = "595-428-3323"
                        },
                        new
                        {
                            ID = 4,
                            Email = "qpadden3@dedecms.com",
                            FirstName = "Padden",
                            LastName = "Quill",
                            Mobile = "506-944-1295",
                            Phone = "177-620-3793"
                        },
                        new
                        {
                            ID = 5,
                            Email = "btesh4@nymag.com",
                            FirstName = "Basilius",
                            LastName = "Tesh",
                            Mobile = "500-717-3485",
                            Phone = "941-489-2754"
                        },
                        new
                        {
                            ID = 6,
                            Email = "TJ@gmail.com",
                            FirstName = "Tommy",
                            LastName = "Jones",
                            Mobile = "559-469-3485",
                            Phone = "559-469-2354"
                        });
                });

            modelBuilder.Entity("ComputerStoreFinalProject.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ComputerStoreFinalProject.Models.Address", b =>
                {
                    b.HasOne("ComputerStoreFinalProject.Models.Customer", "Customer")
                        .WithMany("Address")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerStoreFinalProject.Models.ComputerOrder", b =>
                {
                    b.HasOne("ComputerStoreFinalProject.Models.Computer", "Computer")
                        .WithMany("ComputerOrder")
                        .HasForeignKey("ComputerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputerStoreFinalProject.Models.Order", "Order")
                        .WithMany("ComputerOrder")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerStoreFinalProject.Models.Order", b =>
                {
                    b.HasOne("ComputerStoreFinalProject.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
